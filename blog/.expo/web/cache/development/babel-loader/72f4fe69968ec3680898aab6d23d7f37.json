{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/SignUpScreen.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Input, Button } from 'react-native-elements';\nimport { Ionicons, MaterialIcons, Feather } from '@expo/vector-icons';\nimport { storeDataJSON } from \"./../functions/AsyncStorageFunctions\";\nimport * as Animatable from 'react-native-animatable';\n\nvar SignupScreen = function SignupScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      studentID = _useState4[0],\n      setStudentID = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isInvalidEmail = _useState10[0],\n      setInvalidEmail = _useState10[1];\n\n  var validateEmail = function validateEmail(email) {\n    var re = /\\S+@\\S+\\.\\S+/;\n    if (re.test(email) == true) setInvalidEmail(false);else setInvalidEmail(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    backgroundColor: \"blue\",\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(ImageBackground, {\n    style: styles.image,\n    source: {\n      uri: 'http://picsum.photos/id/474/4288/2848'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"TRAVELS\"), React.createElement(Animatable.View, {\n    animation: \"fadeInUpBig\",\n    delay: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    leftIcon: React.createElement(Ionicons, {\n      name: \"ios-person\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }\n    }),\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(input) {\n      setName(input);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    keyboardType: \"numeric\",\n    leftIcon: React.createElement(Ionicons, {\n      name: \"md-school\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }),\n    placeholder: \"StudentID\",\n    onChangeText: function onChangeText(input) {\n      setStudentID(input);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    leftIcon: React.createElement(MaterialIcons, {\n      name: \"mail-outline\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }\n    }),\n    placeholder: \"E-mail Address\",\n    errorStyle: {\n      color: 'red'\n    },\n    onChangeText: function onChangeText(input) {\n      setEmail(input);\n      validateEmail(input);\n    },\n    errorMessage: isInvalidEmail ? \"Invalid Email Address\" : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    containerStyle: {\n      paddingBottom: 20\n    },\n    leftIcon: React.createElement(MaterialIcons, {\n      name: \"vpn-key\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    }),\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(input) {\n      setPassword(input);\n    },\n    errorMessage: password.length < 4 ? \"Password have to be of 4 characters\" : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: React.createElement(Feather, {\n      name: \"user\",\n      size: 25,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }),\n    titleStyle: {\n      paddingLeft: 10\n    },\n    title: \"Sign up!\",\n    type: \"solid\",\n    onPress: function onPress() {\n      if (name.length > 0 && isInvalidEmail == false && studentID.length > 0 && password.length >= 4) {\n        var user = {\n          name: name,\n          email: email,\n          id: studentID,\n          password: password\n        };\n        storeDataJSON(email, user);\n        alert(\"Account Created\");\n        props.navigation.push(\"Log In\");\n      } else alert(\"Invalid Input\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    type: \"clear\",\n    title: \"Already have an account\",\n    onPress: function onPress() {\n      props.navigation.push(\"Log In\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  text: {\n    textAlignVertical: \"center\",\n    textAlign: \"center\",\n    color: \"#FFFFFF\",\n    fontSize: 30,\n    paddingBottom: 10\n  },\n  card: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    fontFamily: \"san-serif\",\n    borderRadius: 10\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/SignUpScreen.js"],"names":["React","useState","StatusBar","Card","Input","Button","Ionicons","MaterialIcons","Feather","storeDataJSON","Animatable","SignupScreen","props","name","setName","studentID","setStudentID","email","setEmail","password","setPassword","isInvalidEmail","setInvalidEmail","validateEmail","re","test","styles","container","image","uri","text","card","fontSize","input","color","paddingBottom","length","paddingLeft","user","id","alert","navigation","push","StyleSheet","create","flex","justifyContent","textAlignVertical","textAlign","backgroundColor","fontFamily","borderRadius"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { ImageBackground,StyleSheet, Text, View } from 'react-native';\nimport { Card,Input, Button } from 'react-native-elements';\nimport { Ionicons,MaterialIcons,Feather  } from '@expo/vector-icons';\nimport {storeDataJSON} from './../functions/AsyncStorageFunctions';\nimport * as Animatable from 'react-native-animatable';\n\n\n// function validateEmail (email) {\n// let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n//   if (reg.test(email) === false){\n//       return true;\n//   }\n//   else {\n//       return false;\n//   }\n// }\n\nconst SignupScreen =(props)=> {\n    let [name,setName]=useState(\"\");\n    let [studentID,setStudentID]=useState(\"\");\n    let [email,setEmail]=useState(\"\");\n    let [password,setPassword]=useState(\"\");\n    let [isInvalidEmail,setInvalidEmail]=useState(true);\n\n    const validateEmail=(email)=>{\n        var re = /\\S+@\\S+\\.\\S+/;\n        if(re.test(email)==true)\n            setInvalidEmail(false)\n        else \n            setInvalidEmail(true)\n    }\n\n    return(\n        <View style={styles.container}>\n            <StatusBar\n            hidden={true}\n            backgroundColor=\"blue\"\n            barStyle=\"light-content\"/>\n            <ImageBackground\n            style={styles.image}\n            source={{uri:'http://picsum.photos/id/474/4288/2848'}}>\n            <Text style={styles.text}>TRAVELS</Text>\n            <Animatable.View animation=\"fadeInUpBig\" delay={2}>\n                         <Card containerStyle={styles.card}>\n                <Card.Title style={{fontSize:20}}>Sign Up</Card.Title>\n                <Card.Divider />\n                <Input \n                leftIcon={<Ionicons name=\"ios-person\" size={24} color=\"black\" />}\n                placeholder=\"Username\" \n                onChangeText={function (input) {\n                    setName(input);\n                }}\n                />\n                <Input\n                keyboardType = 'numeric' \n                leftIcon={<Ionicons name=\"md-school\" size={24} color=\"black\" />}\n                placeholder=\"StudentID\" onChangeText={function (input) {\n                    setStudentID(input);\n                }}/>\n                <Input\n                leftIcon={<MaterialIcons name=\"mail-outline\" size={24} color=\"black\"/>}\n                placeholder=\"E-mail Address\"\n                errorStyle={{ color: 'red' }}\n                onChangeText={function (input) {\n                    setEmail(input);\n                    validateEmail(input)\n                }}\n                errorMessage={isInvalidEmail?\"Invalid Email Address\":\"\"}\n                />\n                <Input \n                containerStyle={{paddingBottom:20}}\n                leftIcon={<MaterialIcons name=\"vpn-key\" size={24} color=\"black\"/>}\n                placeholder=\"Password\" \n                secureTextEntry={true} onChangeText={function (input) {\n                    setPassword(input);\n                }}\n                errorMessage={password.length<4?\"Password have to be of 4 characters\":\"\"}\n                />\n                <Button\n                icon={<Feather name=\"user\" size={25} color=\"white\" />}\n                titleStyle={{paddingLeft:10}}\n                title=\"Sign up!\"\n                type=\"solid\"\n                onPress={\n                    function () {\n                        if(name.length>0 && isInvalidEmail==false && studentID.length>0 && password.length>=4)\n                        {\n                            let user={\n                            name:name,\n                            email:email,\n                            id:studentID,\n                            password:password,\n                            }\n                            storeDataJSON(email,user);\n                            alert(\"Account Created\")\n                            props.navigation.push(\"Log In\");\n                        }else alert(\"Invalid Input\")\n                        \n                    }\n                }\n                />\n                <Button\n                type=\"clear\"\n                title=\"Already have an account\"\n                onPress={function () {\n                    props.navigation.push(\"Log In\");\n                }}\n                />\n            </Card>\n            </Animatable.View>\n            </ImageBackground>  \n        </View>\n        );\n}\n\nconst styles=StyleSheet.create({\n\n    container:{\n        flex:1,\n        justifyContent: \"center\",  \n    },\n    image:{\n        flex:1,\n        justifyContent: \"center\",\n    },\n    text:{\n        textAlignVertical: \"center\",\n        textAlign: \"center\",\n        color:\"#FFFFFF\",\n        fontSize:30,\n        paddingBottom:10,\n    },\n    card:{\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        fontFamily:\"san-serif\",\n        borderRadius:10\n    }\n    \n});\n\nexport default SignupScreen;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/SinglePostScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { Header, Avatar } from 'react-native-elements';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Card, CardItem, Button, Left, Body, Right } from 'native-base';\nimport { getDataJSON } from \"./../functions/AsyncStorageFunctions\";\nimport WriteComment from \"../components/CommentWrite\";\nimport ShowComment from \"./../components/CommentShow\";\n\nvar SinglePostScreen = function SinglePostScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var postId = route.params.post;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      postDetails = _useState2[0],\n      setpostDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postComment = _useState4[0],\n      setComment = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reload = _useState6[0],\n      setReload = _useState6[1];\n\n  var getPostDetails = function getPostDetails() {\n    var postDetails;\n    return _regeneratorRuntime.async(function getPostDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDataJSON(postId));\n\n          case 2:\n            postDetails = _context.sent;\n\n            if (postDetails != null) {\n              setpostDetails(postDetails);\n            } else console.log(\"no post\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getComments = function getComments() {\n    var allComment, Comment;\n    return _regeneratorRuntime.async(function getComments$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setReload(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getDataJSON('notification'));\n\n          case 3:\n            allComment = _context2.sent;\n\n            if (allComment != null) {\n              Comment = allComment.filter(function (c) {\n                return c.postid == postDetails.id && c.comment != '';\n              });\n              setComment(Comment);\n            } else console.log(\"no comment\");\n\n            setReload(false);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPostDetails();\n  }, []);\n  useEffect(function () {\n    getComments();\n  });\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, React.createElement(StatusBar, {\n      style: \"light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: '#DAF7A6',\n        justifyContent: 'space-around'\n      },\n      leftComponent: React.createElement(Ionicons, {\n        name: \"md-arrow-back\",\n        size: 25,\n        color: \"black\",\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 36\n        }\n      }),\n      centerComponent: {\n        text: 'Post',\n        style: {\n          fontSize: 20,\n          color: '#fff'\n        }\n      },\n      rightComponent: React.createElement(Ionicons, {\n        name: \"md-lock\",\n        size: 25,\n        color: \"white\",\n        onPress: function onPress() {\n          auth.setisLogged(false);\n          auth.setcurrentUser({});\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), React.createElement(Card, {\n      style: {\n        flex: 0,\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n        padding: 10,\n        borderRadius: 10,\n        shadowColor: 'blue',\n        shadowOffset: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, React.createElement(CardItem, {\n      header: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, React.createElement(Left, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, React.createElement(Avatar, {\n      size: \"medium\",\n      rounded: true,\n      overlayContainerStyle: {\n        backgroundColor: '#DAF7A6'\n      },\n      icon: {\n        name: 'user',\n        type: 'font-awesome'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), React.createElement(Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, postDetails.user_name), React.createElement(Text, {\n      style: {\n        color: 'grey'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, postDetails.date)))), React.createElement(CardItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, React.createElement(Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, postDetails.post))), React.createElement(CardItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, React.createElement(Left, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      transparent: true,\n      icon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, React.createElement(Ionicons, {\n      name: \"ios-heart\",\n      size: 40,\n      color: \"pink\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    })), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, postDetails.likecount)))), React.createElement(WriteComment, {\n      user: auth.currentUser.name,\n      postDetails: postDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), React.createElement(FlatList, {\n      data: postComment,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(ShowComment, {\n          content: item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 40\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default SinglePostScreen;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/SinglePostScreen.js"],"names":["React","useEffect","useState","AuthContext","Header","Avatar","StatusBar","Ionicons","Card","CardItem","Button","Left","Body","Right","getDataJSON","WriteComment","ShowComment","SinglePostScreen","navigation","route","postId","params","post","postDetails","setpostDetails","postComment","setComment","reload","setReload","getPostDetails","console","log","getComments","allComment","Comment","filter","c","postid","id","comment","auth","styles","container","backgroundColor","justifyContent","goBack","text","style","fontSize","color","setisLogged","setcurrentUser","flex","marginLeft","marginRight","marginTop","padding","borderRadius","shadowColor","shadowOffset","name","type","user_name","date","likecount","currentUser","item","index","toString","StyleSheet","create"],"mappings":"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","sourcesContent":["import  React, { useEffect, useState } from \"react\";\nimport {StyleSheet, View,FlatList,Text } from \"react-native\";\nimport {AuthContext} from '../providers/AuthProvider';\nimport { Header,Avatar} from 'react-native-elements';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport {Card, CardItem, Button, Left, Body, Right} from 'native-base';\nimport {getDataJSON} from './../functions/AsyncStorageFunctions';\nimport WriteComment from '../components/CommentWrite';\nimport ShowComment from \"./../components/CommentShow\";\n\nconst SinglePostScreen=({navigation,route})=>{\n    let postId=route.params.post\n    let [postDetails,setpostDetails]=useState({});\n    const [postComment,setComment]=useState([]);\n    const [reload,setReload]=useState(false);\n    const getPostDetails =async()=>{\n        let postDetails=await getDataJSON(postId);\n        if(postDetails!=null){\n            setpostDetails(postDetails);\n        }\n        else console.log(\"no post\")\n    }\n\n    const getComments=async ()=>{\n        setReload(true)\n        let allComment=await getDataJSON('notification');\n        if(allComment!=null){\n            let Comment=allComment.filter(c=>c.postid==postDetails.id && c.comment!='')\n            setComment(Comment)\n        }\n        else console.log(\"no comment\")\n        setReload(false)\n    }\n\n    useEffect(()=>{\n        getPostDetails();\n    },[]);\n\n    useEffect(()=>{\n        getComments();\n    });\n\n    return(\n        <AuthContext.Consumer>\n            {(auth)=>\n            (\n                <View style={styles.container}>\n                    <StatusBar style=\"light\"/>\n                    <Header\n                    containerStyle={{\n                    backgroundColor: '#DAF7A6',\n                    justifyContent: 'space-around',}}\n                    leftComponent={<Ionicons name=\"md-arrow-back\" size={25} color=\"black\" onPress={()=>{\n                        navigation.goBack();\n                    }}/>}\n                    centerComponent={{ text: 'Post', style: { fontSize:20,color: '#fff' } }}\n                    rightComponent={<Ionicons name=\"md-lock\" size={25} color=\"white\" \n                    onPress={()=>{\n                        auth.setisLogged(false);\n                        auth.setcurrentUser({});\n                    }}/>}\n                    />\n\n                <Card style={{flex: 0,marginLeft:5,marginRight:5,marginTop:10,padding:10,borderRadius:10,shadowColor:'blue', shadowOffset:10,}}>\n                    <CardItem header>\n                        <Left>\n                            <Avatar size='medium' rounded\n                                overlayContainerStyle={{backgroundColor: '#DAF7A6'}}\n                                icon={{name: 'user', type: 'font-awesome'}} />\n                            <Body>\n                            <Text style={{fontSize:15}}>{postDetails.user_name}</Text>\n                            <Text style={{color:'grey'}}>{postDetails.date}</Text>\n                            </Body>\n                        </Left>\n                    </CardItem>\n                    <CardItem>\n                        <Body>\n                            <Text style={{fontSize:15}}>{postDetails.post}</Text>\n                        </Body>\n                        \n                    </CardItem>\n                    <CardItem >\n                        <Left style={{flex:1}}>\n                            <Button transparent icon>\n                                <Ionicons name=\"ios-heart\" size={40} color=\"pink\" />\n                            </Button>\n                            <Text>{postDetails.likecount}</Text>\n                        </Left>\n                        \n                    </CardItem>\n                    </Card>\n                        <WriteComment user={auth.currentUser.name} postDetails={postDetails}/>\n                        <FlatList\n                            data={postComment}\n                            // onRefresh={getComments}\n                            // refreshing={reload}\n                            renderItem={({item}) =>{\n                                return <ShowComment content={item} />\n                                // return(<Text>Hello</Text>)\n                            }}\n                            keyExtractor={(item, index) => index.toString()}\n                        />\n                </View>\n                )}\n        </AuthContext.Consumer>\n    );\n\n\n};\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n    },\n});\n\nexport default SinglePostScreen;"]},"metadata":{},"sourceType":"module"}
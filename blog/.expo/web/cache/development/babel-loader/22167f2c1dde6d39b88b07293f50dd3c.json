{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/NotificationScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Header } from 'react-native-elements';\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { getDataJSON } from \"./../functions/AsyncStorageFunctions\";\nimport ShowNotification from \"./../components/NotifactionShow\";\n\nvar NotificationScreen = function NotificationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notification = _useState2[0],\n      setNotification = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reload = _useState4[0],\n      setReload = _useState4[1];\n\n  var getNotification = function getNotification() {\n    var notify;\n    return _regeneratorRuntime.async(function getNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setReload(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDataJSON('notification'));\n\n          case 3:\n            notify = _context.sent;\n\n            if (notify != null) {\n              setNotification(notify);\n            } else console.log(\"No Notification\");\n\n            setReload(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getNotification();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, React.createElement(Header, {\n      containerStyle: {\n        backgroundColor: '#DAF7A6',\n        justifyContent: 'space-around'\n      },\n      leftComponent: React.createElement(Ionicons, {\n        name: \"md-menu\",\n        size: 25,\n        color: \"white\",\n        onPress: function onPress() {\n          navigation.openDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 36\n        }\n      }),\n      centerComponent: {\n        text: 'Notification',\n        style: {\n          fontSize: 20,\n          color: '#fff'\n        }\n      },\n      rightComponent: React.createElement(Ionicons, {\n        name: \"md-lock\",\n        size: 25,\n        color: \"white\",\n        onPress: function onPress() {\n          auth.setisLogged(false);\n          auth.setcurrentUser({});\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, React.createElement(FlatList, {\n      data: notification,\n      onRefresh: getNotification,\n      refreshing: reload,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        if (item.receiver == auth.currentUser.email) return React.createElement(ShowNotification, {\n          content: item,\n          navigation: navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })));\n  });\n};\n\nexport default NotificationScreen;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/screens/NotificationScreen.js"],"names":["React","useState","useEffect","Header","AuthContext","Ionicons","getDataJSON","ShowNotification","NotificationScreen","navigation","notification","setNotification","reload","setReload","getNotification","notify","console","log","auth","flex","backgroundColor","justifyContent","openDrawer","text","style","fontSize","color","setisLogged","setcurrentUser","item","receiver","currentUser","email","index","toString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AAEA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,WAAR;AACA,SAASC,QAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT;AACA,OAAQC,gBAAR;;AAGA,IAAOC,kBAAkB,GAAE,SAApBA,kBAAoB,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAAA,kBACLR,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,MACnCS,YADmC;AAAA,MACtBC,eADsB;;AAAA,mBAEfV,QAAQ,CAAC,KAAD,CAFO;AAAA;AAAA,MAEjCW,MAFiC;AAAA,MAE1BC,SAF0B;;AAIxC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBD,YAAAA,SAAS,CAAC,IAAD,CAAT;AADoB;AAAA,6CAEHP,WAAW,CAAC,cAAD,CAFR;;AAAA;AAEhBS,YAAAA,MAFgB;;AAGpB,gBAAGA,MAAM,IAAE,IAAX,EAAiB;AACbJ,cAAAA,eAAe,CAACI,MAAD,CAAf;AACH,aAFD,MAIIC,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACJJ,YAAAA,SAAS,CAAC,KAAD,CAAT;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAUAX,EAAAA,SAAS,CAAC,YAAI;AACVY,IAAAA,eAAe;AAClB,GAFQ,EAEP,EAFO,CAAT;AAIA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,UAACI,IAAD;AAAA,WAEG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACA,MAAA,cAAc,EAAE;AAChBC,QAAAA,eAAe,EAAE,SADD;AAEhBC,QAAAA,cAAc,EAAE;AAFA,OADhB;AAKA,MAAA,aAAa,EAAE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,SAAf;AAAyB,QAAA,IAAI,EAAE,EAA/B;AAAmC,QAAA,KAAK,EAAC,OAAzC;AAAiD,QAAA,OAAO,EAAE,mBAAI;AACzEZ,UAAAA,UAAU,CAACa,UAAX;AACH,SAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf;AAQA,MAAA,eAAe,EAAE;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC,EAAV;AAAcC,UAAAA,KAAK,EAAE;AAArB;AAA/B,OARjB;AASA,MAAA,cAAc,EAAE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,SAAf;AAAyB,QAAA,IAAI,EAAE,EAA/B;AAAmC,QAAA,KAAK,EAAC,OAAzC;AAChB,QAAA,OAAO,EAAE,mBAAI;AACTR,UAAAA,IAAI,CAACS,WAAL,CAAiB,KAAjB;AACAT,UAAAA,IAAI,CAACU,cAAL,CAAoB,EAApB;AACH,SAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAgBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACA,MAAA,IAAI,EAAElB,YADN;AAEA,MAAA,SAAS,EAAEI,eAFX;AAGA,MAAA,UAAU,EAAEF,MAHZ;AAIA,MAAA,UAAU,EAAE,2BAAoB;AAAA,YAARiB,IAAQ,SAARA,IAAQ;AAC5B,YAAGA,IAAI,CAACC,QAAL,IAAeZ,IAAI,CAACa,WAAL,CAAiBC,KAAnC,EACI,OACA,oBAAC,gBAAD;AACI,UAAA,OAAO,EAAEH,IADb;AAEI,UAAA,UAAU,EAAEpB,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAKP,OAXD;AAYA,MAAA,YAAY,EAAE,sBAACoB,IAAD,EAAOI,KAAP;AAAA,eAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,OAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,CAFH;AAAA,GADL,CADJ;AA2CH,CA7DD;;AAiEA,eAAe1B,kBAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {  FlatList, View } from 'react-native';\nimport {Header} from 'react-native-elements';\nimport {AuthContext} from '../providers/AuthProvider';\nimport { Ionicons} from '@expo/vector-icons';\nimport { getDataJSON } from \"./../functions/AsyncStorageFunctions\";\nimport  ShowNotification  from \"./../components/NotifactionShow\";\n\n\nconst  NotificationScreen =({navigation})=> {\n    let [notification,setNotification]=useState([]);\n    const [reload,setReload]=useState(false);\n\n    const getNotification = async ()=>{\n        setReload(true)\n        let notify=await getDataJSON('notification');\n        if(notify!=null ){\n            setNotification(notify);\n        }\n        else\n            console.log(\"No Notification\");\n        setReload(false);\n    }\n    useEffect(()=>{\n        getNotification();\n    },[]);\n\n    return(\n        <AuthContext.Consumer>\n            {(auth)=>\n            (\n                <View style={{flex:1}} >\n                    <Header\n                    containerStyle={{\n                    backgroundColor: '#DAF7A6',\n                    justifyContent: 'space-around',\n                }}\n                    leftComponent={<Ionicons name=\"md-menu\" size={25} color=\"white\" onPress={()=>{\n                        navigation.openDrawer();\n                    }}/>}\n                    centerComponent={{ text: 'Notification', style: {fontSize:20, color: '#fff' } }}\n                    rightComponent={<Ionicons name=\"md-lock\" size={25} color=\"white\" \n                    onPress={()=>{\n                        auth.setisLogged(false);\n                        auth.setcurrentUser({});\n                    }}/>}\n                    />\n                    <View>\n                        <FlatList\n                        data={notification}\n                        onRefresh={getNotification}\n                        refreshing={reload}\n                        renderItem={function ({ item }) {\n                            if(item.receiver==auth.currentUser.email)\n                                return (\n                                <ShowNotification\n                                    content={item}\n                                    navigation={navigation}\n                                />);\n                        }}\n                        keyExtractor={(item, index) => index.toString()}\n                        />\n                    </View>\n                    \n                    \n                </View>\n                \n            )}\n        </AuthContext.Consumer>\n    );\n}\n\n\n\nexport default NotificationScreen;"]},"metadata":{},"sourceType":"module"}
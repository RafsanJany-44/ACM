{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rafsan/Documents/GitHub/practice_cell/blog/src/components/PostShow.js\";\n\nimport React, { useState } from 'react';\nimport { Card, CardItem, Left, Body, Right } from 'native-base';\nimport { Avatar, Button } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { mergeData } from \"../functions/AsyncStorageFunctions\";\nimport AddNotification from \"../functions/NotificationFunction\";\n\nvar ShowPost = function ShowPost(_ref) {\n  var content = _ref.content,\n      currentuser = _ref.currentuser,\n      navigation = _ref.navigation;\n\n  var _useState = useState(content.likecount),\n      _useState2 = _slicedToArray(_useState, 2),\n      like = _useState2[0],\n      setLike = _useState2[1];\n\n  return React.createElement(Card, {\n    style: {\n      flex: 0,\n      marginLeft: 5,\n      marginRight: 5,\n      marginTop: 10,\n      padding: 10,\n      borderRadius: 10,\n      shadowColor: 'blue',\n      shadowOffset: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, React.createElement(Avatar, {\n    size: \"medium\",\n    rounded: true,\n    overlayContainerStyle: {\n      backgroundColor: 'grey'\n    },\n    icon: {\n      name: 'user',\n      type: 'font-awesome'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, content.user_name), React.createElement(Text, {\n    note: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, content.date)))), React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, content.post))), React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    type: \"clear\",\n    icon: React.createElement(Ionicons, {\n      name: \"md-heart-empty\",\n      size: 40,\n      color: \"pink\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }\n    }),\n    onPress: function _callee() {\n      var likedjson, p;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(mergeData(content.id, JSON.stringify({\n                likecount: like + 1\n              })));\n\n            case 2:\n              likedjson = {\n                postid: content.id,\n                comment: \"\",\n                receiver: content.user_email,\n                sender: currentuser.name\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AddNotification(likedjson));\n\n            case 5:\n              p = _context.sent;\n              setLike(like + 1);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, like)), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: '#DAF7A6'\n    },\n    title: \"Comment\",\n    onPress: function onPress() {\n      return navigation.navigate('Post', {\n        post: content.id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }))));\n};\n\nexport default ShowPost;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/components/PostShow.js"],"names":["React","useState","Card","CardItem","Left","Body","Right","Avatar","Button","Ionicons","mergeData","AddNotification","ShowPost","content","currentuser","navigation","likecount","like","setLike","flex","marginLeft","marginRight","marginTop","padding","borderRadius","shadowColor","shadowOffset","backgroundColor","name","type","user_name","date","post","id","JSON","stringify","likedjson","postid","comment","receiver","user_email","sender","p","navigate"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {Card,CardItem, Left, Body, Right} from 'native-base';\nimport {Avatar,Button} from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport {Text} from 'react-native';\nimport {mergeData} from '../functions/AsyncStorageFunctions';\nimport  AddNotification  from \"../functions/NotificationFunction\";\n\n\nconst ShowPost=({content,currentuser,navigation})=>{\n    const [like,setLike]=useState(content.likecount);\n    return(<Card style={{flex: 0,marginLeft:5,marginRight:5,marginTop:10,padding:10,borderRadius:10,shadowColor:'blue', shadowOffset:10,}}>\n            <CardItem>\n              <Left>\n                    <Avatar size='medium' rounded\n                    overlayContainerStyle={{backgroundColor: 'grey'}}\n                    icon={{name: 'user', type: 'font-awesome'}} />\n                <Body>\n                    <Text>{content.user_name}</Text>\n                    <Text note>{content.date}</Text>\n                </Body>\n              </Left>\n            </CardItem>\n            <CardItem>\n              <Body>\n                <Text>\n                  {content.post}\n                </Text>\n              </Body>\n            </CardItem>\n            <CardItem>\n                <Left>\n                    <Button \n                    type=\"clear\" \n                    icon={<Ionicons name=\"md-heart-empty\" size={40} color=\"pink\" />} \n                    onPress={async ()=>{\n                        await mergeData(content.id,JSON.stringify({likecount:like+1}));\n                        let likedjson={\n                          postid:content.id,\n                          comment:\"\",\n\t                        receiver:content.user_email,\n                          sender:currentuser.name,\n                        };\n                        let p=await AddNotification(likedjson);\n                        setLike(like+1)\n                    }}>\n                    </Button>\n                    <Text>{like}</Text>\n                </Left>\n                <Right>\n                  <Button buttonStyle={{backgroundColor:'#DAF7A6'}} title=\"Comment\" onPress={()=>navigation.navigate('Post',{post:content.id})}>\n                  </Button>\n                </Right>\n            </CardItem>\n          </Card>);\n};\n\n\nexport default ShowPost;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getDataJSON, storeDataJSON } from \"./AsyncStorageFunctions\";\n\nvar AddNotification = function AddNotification(value) {\n  var notifies, storedNotification;\n  return _regeneratorRuntime.async(function AddNotification$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          notifies = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getDataJSON('notification'));\n\n        case 4:\n          storedNotification = _context.sent;\n\n          if (!(storedNotification != null)) {\n            _context.next = 11;\n            break;\n          }\n\n          storedNotification.push(value);\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(storeDataJSON('notification', storedNotification));\n\n        case 9:\n          _context.next = 14;\n          break;\n\n        case 11:\n          notifies.push(value);\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(storeDataJSON('notification', notifies));\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 16]], Promise);\n};\n\nexport default AddNotification;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/functions/NotificationFunction.js"],"names":["getDataJSON","storeDataJSON","AddNotification","value","notifies","storedNotification","push","console","log"],"mappings":";AAAA,SAAQA,WAAR,EAAoBC,aAApB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,QADgB,GACP,EADO;AAAA;AAAA;AAAA,2CAGaJ,WAAW,CAAC,cAAD,CAHxB;;AAAA;AAGZK,UAAAA,kBAHY;;AAAA,gBAIbA,kBAAkB,IAAE,IAJP;AAAA;AAAA;AAAA;;AAKZA,UAAAA,kBAAkB,CAACC,IAAnB,CAAwBH,KAAxB;AALY;AAAA,2CAMNF,aAAa,CAAC,cAAD,EAAgBI,kBAAhB,CANP;;AAAA;AAAA;AAAA;;AAAA;AASZD,UAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAd;AATY;AAAA,2CAUNF,aAAa,CAAC,cAAD,EAAgBG,QAAhB,CAVP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAahBG,UAAAA,OAAO,CAACC,GAAR;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAkBA,eAAeN,eAAf","sourcesContent":["import {getDataJSON,storeDataJSON} from './AsyncStorageFunctions';\n\nconst AddNotification = async(value)=>{\n    let notifies=[];\n    try{\n        let storedNotification=await getDataJSON('notification');\n        if(storedNotification!=null){\n            storedNotification.push(value)\n            await storeDataJSON('notification',storedNotification);\n        }\n        else{\n            notifies.push(value)\n            await storeDataJSON('notification',notifies);\n        }\n    }catch(error){\n        console.log(error)\n    }\n};\n\n\nexport default AddNotification;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rafsan/Documents/GitHub/practice_cell/blog/src/components/PostWrite.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Button, Input } from 'react-native-elements';\nimport { storeDataJSON } from \"../functions/AsyncStorageFunctions\";\nimport moment from 'moment';\nimport { Entypo } from '@expo/vector-icons';\n\nfunction ShowCurrentDate() {\n  var date = new moment().format('DD MMM YYYY');\n  return date;\n}\n\nvar PostWrite = function PostWrite(_ref) {\n  var user = _ref.user;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var input = React.createRef();\n  return React.createElement(Card, {\n    containerStyle: {\n      borderRadius: 10,\n      marginLeft: 5,\n      marginRight: 5,\n      shadowOffset: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    ref: input,\n    placeholder: \"Write about the unknows\",\n    multiline: true,\n    leftIcon: React.createElement(Entypo, {\n      name: \"pencil\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }),\n    onChangeText: function onChangeText(text) {\n      setPost(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row-reverse'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Post\",\n    buttonStyle: {\n      width: 100,\n      alignSelf: 'flex-start',\n      backgroundColor: '#DAF7A6'\n    },\n    onPress: function onPress() {\n      id = Math.floor(Math.random() * 100000 + 1);\n\n      if (post.length > 0) {\n        var newPost = {\n          id: \"post\" + id,\n          post: post,\n          user_name: user.name,\n          user_email: user.email,\n          date: ShowCurrentDate(),\n          likecount: 0\n        };\n        storeDataJSON(\"post\" + id, newPost);\n        setPost(\"\");\n        input.current.clear();\n      } else {\n        alert(\"Input Field Empty\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    disabled: post.length == 0 ? true : false,\n    type: \"clear\",\n    title: \"Clear\",\n    titleStyle: {\n      color: '#3a0088'\n    },\n    buttonStyle: {\n      width: 120,\n      alignSelf: 'flex-end'\n    },\n    onPress: function onPress() {\n      setPost(\"\");\n      input.current.clear();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default PostWrite;","map":{"version":3,"sources":["/Users/rafsan/Documents/GitHub/practice_cell/blog/src/components/PostWrite.js"],"names":["React","useState","Card","Button","Input","storeDataJSON","moment","Entypo","ShowCurrentDate","date","format","PostWrite","user","post","setPost","input","createRef","borderRadius","marginLeft","marginRight","shadowOffset","text","flexDirection","width","alignSelf","backgroundColor","id","Math","floor","random","length","newPost","user_name","name","user_email","email","likecount","current","clear","alert","color"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { View } from 'react-native';\n\nimport { Card, Button ,Input} from 'react-native-elements';\nimport { storeDataJSON} from '../functions/AsyncStorageFunctions';\nimport moment from 'moment';\nimport { Entypo} from '@expo/vector-icons';\n\n\nfunction ShowCurrentDate() {\n      var date = new moment().format('DD MMM YYYY');\n      return date;\n}\n\n\nconst PostWrite=({user})=>{\n    const [post, setPost] = useState(\"\");\n    const input = React.createRef();\n    return(\n    <Card containerStyle={{borderRadius:10,marginLeft:5,marginRight:5, shadowOffset:10}}>\n        <Input\n        ref={input}\n        placeholder='Write about the unknows'\n        multiline={true}\n        leftIcon={<Entypo name=\"pencil\" size={24} color=\"black\" />}\n        onChangeText={(text)=>{\n            setPost(text); \n        }}\n        />\n        <View style={{flexDirection:'row-reverse'}}>\n            <Button title='Post' buttonStyle={{width:100,alignSelf:'flex-start',backgroundColor:'#DAF7A6'}} onPress={\n                ()=>{\n                    id=Math.floor((Math.random() * 100000) + 1);\n                    if(post.length>0){\n                        let newPost={\n                        id:\"post\"+id,\n                        post:post,\n                        user_name:user.name,\n                        user_email:user.email,\n                        date: ShowCurrentDate(),\n                        likecount:0,\n                        }\n                        storeDataJSON(\"post\"+id,newPost);\n                        setPost(\"\");\n                        input.current.clear();\n                    }\n                    else {\n                        alert(\"Input Field Empty\");\n                    }\n                }\n            }/>\n            <Button \n            disabled={post.length==0? true:false} \n            type='clear' title='Clear' \n            titleStyle={{color:'#3a0088'}}\n            buttonStyle={{width:120,alignSelf:'flex-end'}}\n            onPress={()=>{\n                setPost(\"\");\n                input.current.clear();\n            }}/>\n        </View>\n        \n    </Card>\n    );\n    \n};\n\n\nexport default PostWrite;"]},"metadata":{},"sourceType":"module"}